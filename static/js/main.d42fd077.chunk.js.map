{"version":3,"sources":["redux/note/note.types.js","redux/note/note.utils.js","redux/note/note.reducer.js","redux/root.reducer.js","redux/store.js","components/note/view-note/view-note.component.jsx","components/note/edit-note/edit-note.jsx","components/note/note.component.jsx","redux/note/note.actions.js","components/main-page/MainPage.component.jsx","App.js","index.js"],"names":["noteActionTypes","ADD_NOTE","REMOVE_NOTE","EDIT_NOTE","TOGGLE_NOTE","addNewNote","notes","newNote","id","length","text","dateCreated","Date","toLocaleString","removeNote","noteToRemove","filter","note","editNote","noteToEdit","map","toggleNote","noteToToggle","editable","INITIAL_STATE","noteReducer","state","action","type","payload","toEditNote","persistConfig","key","storage","whitelist","rootReducer","combineReducers","persistReducer","middlewares","logger","store","createStore","applyMiddleware","persistor","persistStore","ViewNote","ReactHtmlParser","marked","EditNote","handleChange","Form","TextArea","value","onChange","Note","toggleEditable","className","Card","Content","Header","Icon","name","onClick","Description","addNote","connect","dispatch","event","target","size","App","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d42fd077.chunk.js","sourcesContent":["const noteActionTypes = {\r\n  ADD_NOTE: 'ADD_NOTE',\r\n  REMOVE_NOTE: 'REMOVE_NOTE',\r\n  EDIT_NOTE: 'EDIT_NOTE',\r\n  TOGGLE_NOTE: 'TOGGLE_NOTE'\r\n}\r\n\r\nexport default  noteActionTypes;","export const addNewNote = (notes) => {\r\n  const lastid = notes.length ? notes[notes.length - 1].id : 1;\r\n  const newNote = {\r\n    id: lastid + 1,\r\n    text: '',\r\n    dateCreated: new Date().toLocaleString(),\r\n  }\r\n  return [...notes, newNote]\r\n}\r\n\r\nexport const removeNote = (notes, noteToRemove) => (\r\n  notes.filter(note => note.id !== noteToRemove.id)\r\n)\r\n\r\nexport const editNote = (notes, noteToEdit, text) => (\r\n  notes.map(note =>\r\n    (note.id === noteToEdit.id\r\n      ? { ...note, text: text }\r\n      : note)\r\n  )\r\n)\r\n\r\nexport const toggleNote = (notes, noteToToggle) => (\r\n  notes.map(note =>\r\n    note.id === noteToToggle.id ?\r\n      { ...note, editable: !note.editable }\r\n      : note\r\n  )\r\n)","import noteActionTypes from './note.types';\r\n\r\nimport { addNewNote, removeNote, editNote, toggleNote } from \"./note.utils\";\r\n\r\nconst INITIAL_STATE = {\r\n  notes: []\r\n};\r\n\r\nconst noteReducer = (state=INITIAL_STATE, action={}) => {\r\n  switch (action.type) {\r\n    case noteActionTypes.ADD_NOTE:\r\n      return {\r\n        ...state,\r\n        notes: addNewNote(state.notes)\r\n      };\r\n\r\n    case noteActionTypes.REMOVE_NOTE:\r\n      return {\r\n        ...state,\r\n        notes: removeNote(state.notes, action.payload)\r\n      }\r\n\r\n    case noteActionTypes.EDIT_NOTE:\r\n      return {\r\n        ...state,\r\n        notes: editNote(state.notes, action.payload.toEditNote, action.payload.text)\r\n      }\r\n\r\n    case noteActionTypes.TOGGLE_NOTE:\r\n      return {\r\n        ...state,\r\n        notes: toggleNote(state.notes, action.payload)\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default noteReducer;","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport noteReducer from './note/note.reducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['note']\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  note: noteReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import { applyMiddleware, createStore } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root.reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport marked from 'marked';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst ViewNote = ({ note }) => {\r\n  return (\r\n    <div>\r\n      {ReactHtmlParser(marked(note.text))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewNote;","import React from 'react';\r\nimport { Form, TextArea } from 'semantic-ui-react'\r\n\r\n\r\nconst EditNote = ({ note, handleChange }) => {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <TextArea value={note.text} onChange={handleChange(note)}/>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditNote;","import React from 'react';\r\nimport { Card, Icon } from \"semantic-ui-react\";\r\n\r\nimport ViewNote from \"./view-note/view-note.component\";\r\n\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './note.styles.scss'\r\nimport EditNote from \"./edit-note/edit-note\";\r\n\r\nconst Note = ({ note, editNote, removeNote, toggleEditable }) => (\r\n    <div className='note'>\r\n      <Card className='card'>\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <div className='card-header'>\r\n              <div className='header-left'>\r\n                <span>Created at: {note.dateCreated}</span>\r\n              </div>\r\n              <div className='card-right'>\r\n                <Icon name='remove' className='clickable' onClick={() => removeNote(note)} />\r\n                <Icon name='edit' className='clickable' onClick={() => toggleEditable(note)} />\r\n              </div>\r\n            </div>\r\n          </Card.Header>\r\n          <Card.Description>\r\n            {\r\n              note.editable ? <EditNote note={note} handleChange={editNote} />\r\n                : <ViewNote note={note} />\r\n            }\r\n          </Card.Description>\r\n        </Card.Content>\r\n      </Card>\r\n    </div>\r\n);\r\n\r\nexport default Note;","import noteActionTypes from './note.types';\r\n\r\nexport const addNote = ({\r\n  type: noteActionTypes.ADD_NOTE\r\n})\r\n\r\nexport const removeNote = toRemoveNote => ({\r\n  type: noteActionTypes.REMOVE_NOTE,\r\n  payload: toRemoveNote\r\n})\r\n\r\nexport const editNote = (toEditNote, text) => ({\r\n  type: noteActionTypes.EDIT_NOTE,\r\n  payload: {\r\n    toEditNote,\r\n    text\r\n  },\r\n})\r\n\r\nexport const toggleEditable = toToggleNote => ({\r\n  type: noteActionTypes.TOGGLE_NOTE,\r\n  payload: toToggleNote\r\n})\r\n","import React from 'react'\r\nimport { Icon } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Note from \"../note/note.component\";\r\n\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './MainPage.styles.scss'\r\n\r\nimport { addNote, editNote, removeNote, toggleEditable } from '../../redux/note/note.actions';\r\n\r\n\r\nconst App = ({ addNote, editNote , note, removeNote, toggleEditable }) => (\r\n  <div className='note-page'>\r\n    <Icon name='plus square outline' size='big' onClick={addNote} className='clickable' />\r\n\r\n    {\r\n      note.notes.map(note => (\r\n        <Note key={note.id} note={note} editNote={editNote} removeNote={removeNote}\r\n              toggleEditable={toggleEditable} />\r\n      ))\r\n    }\r\n  </div>\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addNote: () => dispatch(addNote),\r\n  removeNote: (note) => dispatch(removeNote(note)),\r\n  editNote: (note) => (event) => dispatch(editNote(note, event.target.value)),\r\n  toggleEditable: (note) => dispatch(toggleEditable(note))\r\n})\r\n\r\nconst mapStateToProps = state => ({\r\n  note: state.note\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react'\n\nimport MainPage from './components/main-page/MainPage.component'\n\nimport './App.css'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <MainPage />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { store, persistor } from './redux/store'\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store} >\n    <PersistGate persistor={persistor} >\n      <App />\n    </PersistGate>\n  </Provider>\n  , document.getElementById('root'));"],"sourceRoot":""}